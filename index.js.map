{"version":3,"file":"index.js","sources":["dist/internal/util.js","dist/core/sum_type.js","dist/core/unit.js","dist/async-data/type.js","dist/async-data/functions.js"],"sourcesContent":["/**\n \n    ██╗   ██╗████████╗██╗██╗     ███████╗\n    ██║   ██║╚══██╔══╝██║██║     ██╔════╝\n    ██║   ██║   ██║   ██║██║     ███████╗\n    ██║   ██║   ██║   ██║██║     ╚════██║\n    ╚██████╔╝   ██║   ██║███████╗███████║\n     ╚═════╝    ╚═╝   ╚═╝╚══════╝╚══════╝\n           \n     \n    @internal\n    @module\n\n */\nconst objEq = (x, y) => {\n    if (!isObject(x) || !isObject(y))\n        return false;\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length)\n        return false;\n    for (const k of xKeys) {\n        const xVal = x[k];\n        const yVal = y[k];\n        const areObjects = isObject(xVal) && isObject(yVal);\n        if (areObjects && !objEq(xVal, yVal)\n            || !areObjects && xVal !== yVal)\n            return false;\n    }\n    return true;\n};\nconst isObject = (obj) => obj != null && typeof obj === 'object';\nconst valueEq = (x, y) => {\n    if (typeof x !== typeof y)\n        return false;\n    if (!isObject(x))\n        return x === y;\n    return objEq(x, y);\n};\nexport { valueEq };\n//# sourceMappingURL=util.js.map","/**\n  \n    ███████╗██╗   ██╗███╗   ███╗    ████████╗██╗   ██╗██████╗ ███████╗\n    ██╔════╝██║   ██║████╗ ████║    ╚══██╔══╝╚██╗ ██╔╝██╔══██╗██╔════╝\n    ███████╗██║   ██║██╔████╔██║       ██║    ╚████╔╝ ██████╔╝█████╗\n    ╚════██║██║   ██║██║╚██╔╝██║       ██║     ╚██╔╝  ██╔═══╝ ██╔══╝\n    ███████║╚██████╔╝██║ ╚═╝ ██║       ██║      ██║   ██║     ███████╗\n    ╚══════╝ ╚═════╝ ╚═╝     ╚═╝       ╚═╝      ╚═╝   ╚═╝     ╚══════╝\n                                                                         \n  \n    @internal\n    @module\n  \n */\n// TODO\n// type MatchObj<T extends SumCase<T>> = {\n//     [ K in keyof SumCase<T> ] : ( ...args : T[ K ]) => unknown\n// }\nclass SumType {\n    constructor(c, d) {\n        this.__case = c;\n        this.__data = d;\n    }\n}\nexport default SumType;\n//# sourceMappingURL=sum_type.js.map","/**\n \n     ██╗   ██╗███╗   ██╗██╗████████╗\n    ██║   ██║████╗  ██║██║╚══██╔══╝\n    ██║   ██║██╔██╗ ██║██║   ██║\n    ██║   ██║██║╚██╗██║██║   ██║\n    ╚██████╔╝██║ ╚████║██║   ██║\n     ╚═════╝ ╚═╝  ╚═══╝╚═╝   ╚═╝\n                             \n    @module\n\n */\n/**\n *      Type-safe alternative to `null` or `undefined`.\n *\n *      @internal\n *\n */\nconst Unit = {\n    u: Symbol.for('unit'),\n    isUnit(u) {\n        return u === Unit.u;\n    }\n};\nexport default Unit;\n//# sourceMappingURL=unit.js.map","/**\n *      Provide a type to work with remote data.\n *\n *      @internal\n *      @module\n *\n */\nimport { valueEq } from '../internal/util';\nimport SumType from '../core/sum_type';\nimport Unit from '../core/unit';\nconst notQueried = Symbol.for('NotQueried');\nconst waiting = Symbol.for('Waiting');\nconst left = Symbol.for('Left');\nconst right = Symbol.for('Right');\n/**\n *      `AsyncData` implementation.\n *\n *      @template L     The error type to be wrapped in potential `left` cases.\n *      @template R     The value type to be wrapped in potential `right` cases.\n *\n */\nexport class AsyncData extends SumType {\n    /**\n     *      Constructor.\n     *\n     *      @param c\n     *      @param d\n     *\n     *      @private\n     *\n     */\n    constructor(c, d) {\n        super(c, d);\n    }\n    /**\n     *      Create an instance of `notQueried`.\n     *\n     *      @typeparam E        The type of the error that would be wrapped in a `left`.\n     *      @typeparam A        The type of the value that would be wrapped in a `right`.\n     *\n     *      @returns            A case `notQueried` of type {@link AsyncData}.\n     *\n     *      @static\n     *      @public\n     *\n     */\n    static notQueried() {\n        return new AsyncData(notQueried.description, Unit);\n    }\n    /**\n     *      Create an instance of 'waiting'.\n     *\n     *      @typeparam E        The type of the error that would be wrapped in a `left`.\n     *      @typeparam A        The type of the value that would be wrapped in a `right`.\n     *\n     *      @returns {AsyncData<L , R>} A case `waiting` of {@link AsyncData}.\n     *\n     *      @static\n     *      @public\n     *\n     */\n    static waiting() {\n        return new AsyncData(waiting.description, Unit);\n    }\n    /**\n     *      Create an instance of `right`.\n     *\n     *      @typeparam E        The type of the error that would be wrapped in a `left`.\n     *      @typeparam A        The type of the value wrapped in this `right`.\n     *\n     *      @param {A} a        The value to wrap in this `right`.\n     *\n     *      @return {AsyncData<E, A>}   A case `right` of {@link AsyncData} wrapping a value of type A.\n     *\n     *      @static\n     *      @public\n     *\n     */\n    static right(a) {\n        return new AsyncData(right.description, a);\n    }\n    /**\n     *      Create an instance of `left`.\n     *\n     *      @typeparam E        The type of the error wrapped in this `left`.\n     *      @typeparam A        The type of the value that would be wrapped in a `right`.\n     *\n     *      @param {E} e        The error to wrap in this `left`.\n     *\n     *      @returns {AsyncData<E , A>} A case `left` of {@link AsyncData} wrapping an error of {E}\n     *\n     *      @static\n     *      @public\n     *\n     */\n    static left(e) {\n        return new AsyncData(left.description, e);\n    }\n    /**\n     *      Determine whether the `AsyncData` is a `notQueriedb.\n     *\n     */\n    get isNotQueried() {\n        return this.__case === notQueried.description;\n    }\n    /**\n     *      Determine whether the `AsyncData` is a `waiting`.\n     *\n     */\n    get isWaiting() {\n        return this.__case === waiting.description;\n    }\n    /**\n     *      Determine whether the `AsyncData` is a `failure`.\n     *\n     */\n    get isLeft() {\n        return this.__case === left.description;\n    }\n    /**\n     *      Determine whether the `AsyncData` is a `success`.\n     *\n     */\n    get isRight() {\n        return this.__case === right.description;\n    }\n    /**\n     *      Return the case of the {@link AsyncData}\n     *      (IE. `NotQueried`, `Waiting`, `Left`, or `Right`).\n     *\n     */\n    get case() {\n        return this.__case;\n    }\n    /**\n     *      Get the value wrapped in this {@see AsyncData}.\n     *      Will throw if the {@see AsyncData} is not a `right`.\n     *\n     */\n    get right() {\n        if (!this.isRight)\n            throw new Error(`Cannot get a value from a <${this.__case}>`);\n        return this.__data;\n    }\n    /**\n     *      Get the error wrapped in this {@see AsyncData}.\n     *      Will throw if the {@see AsyncData} is not a `left`.\n     */\n    get left() {\n        if (!this.isLeft)\n            throw new Error(`Cannot get an error from a <${this.__case}>`);\n        return this.__data;\n    }\n    /**\n     *      Apply the function `fn` to the value wrapped in the {@see AsyncData}\n     *      if it is a `success`.\n     *\n     *      @fn         The {@link FunctorFn} to apply to the value wrapped in the `AsyncData`.\n     *\n     *      @returns    A new `AsyncData` whose value is the result of the application\n     *                      of the function `fn` to the wrapped value.\n     *\n     */\n    map(fn) {\n        return (this.isRight\n            ? AsyncData.right(fn(this.right))\n            : this);\n    }\n    /**\n     *      Apply the function `fn` to the error wrapped in the {@see AsyncData}\n     *      if it is a `left`.\n     *\n     *      @param      fn  The function to apply to the error value wrapped in a `left` case of {@see AsyncData}.\n     *\n     *      @returns        A `left` case of {@see AsyncData} wrapping the transformed error value.\n     *\n     */\n    mapLeft(fn) {\n        return (this.isLeft\n            ? AsyncData.left(fn(this.left))\n            : this);\n    }\n    /**\n     *      Apply the function `fn` to the value wrapped in the `RemoteData`\n     *      if it is a `success`.\n     *\n     *      @param fn   The {@link MonadicFn} to apply to the value wrapped in the `AsyncData`.\n     *\n     *      @returns    A new `AsyncData` whose value is the result of the application\n     *                      of the function `fn` to the wrapped value.\n     *\n     */\n    fMap(fn) {\n        return (this.isRight\n            ? fn(this.right)\n            : this);\n    }\n    /**\n     *      Apply a function wrapped in an {@see AsyncData} to the value wrapped in another {@see AsyncData}\n     *      if the latter is a `success`.\n     *\n     *      @param this     The function to apply to the wrapped value.\n     *      @param a        The {@see AsyncData}-wrapped value to which to apply the function.\n     *\n     *      @return         The result of applying the given function to the given argument,\n     *                      wrapped in an {@see AsyncData}.\n     *\n     */\n    ap(a) {\n        return a.fMap(val => this.map(fn => fn(val)));\n    }\n    /**\n     *      Unwrap the value from an {@see AsyncData} if it is a `right`,\n     *      otherwise return the provided default value.\n     *\n     *      @param dVal Default value to return if the {@see AsyncData} is not `right`.\n     *\n     *      @returns    The wrapped value, or a default value if the {@see AsyncData} is not `right`.\n     *\n     */\n    rightOr(dVal) {\n        return this.isRight\n            ? this.right\n            : dVal;\n    }\n    /**\n     *      Unwrap the error from an {@see AsyncData} if it is a `left`,\n     *      otherwise return the provided default value.\n     *\n     *      @param dErr     Default value to return if the {@see AsyncData} is not `left`.\n     *\n     *      @returns        The wrapped error value, or the supplied value if the {@see AsyncData} is not `left`.\n     *\n     */\n    leftOr(dErr) {\n        return this.isLeft\n            ? this.left\n            : dErr;\n    }\n    /**\n     *      Apply a function to the error or value wrapped in an {@see AsyncData} based on its case.\n     *      The supplied functions will receive no arguments if the case is `notQueried` or `waiting`,\n     *      the wrapped error value if the case if `left`, and the wrapped value if the case is `right`.\n     *\n     *      @param m    The {@see AsyncData} against which to match.\n     *\n     *      @returns    The result of applying the matching function to the wrapped value or lack thereof.\n     *\n     */\n    caseOf(m) {\n        switch (this.case) {\n            case notQueried.description: return m.NotQueried();\n            case waiting.description: return m.Waiting();\n            case left.description: return m.Left(this.left);\n            case right.description: return m.Right(this.right);\n        }\n    }\n    /**\n     *      Determine whether two {@see AsyncData} instances are equal in terms of both\n     *      case and wrapped value.\n     *\n     *      @param this     Base {@see AsyncData} with which to compare.\n     *      @param b        Incoming {@see AsyncData} against which to compare.\n     *\n     *      @returns        A boolean value indicating whether the two {@see AsyncData}\n     *                      instances are equal.\n     *\n     *      @public\n     *\n     */\n    eq(b) {\n        switch (this.case) {\n            case notQueried.description: return b.isNotQueried;\n            case waiting.description: return b.isWaiting;\n            case left.description: return b.isLeft && valueEq(this.left, b.left);\n            case right.description: return b.isRight && valueEq(this.right, b.right);\n            default: return false;\n        }\n    }\n}\nexport default AsyncData;\nexport { notQueried, waiting, left, right };\n//# sourceMappingURL=type.js.map","/**\n *      Provide \"static\" , stand-alone functions for working with the `AsyncData` type\n *      without referencing the type directly.\n *\n *      @see AsyncData\n *\n *      @module\n *\n */\nimport AsyncData from './type';\n/**\n *      @see AsyncData.notQueried\n *\n */\nexport const notQueried = () => AsyncData.notQueried();\n/**\n *      @see AsyncData.waiting\n *\n */\nexport const waiting = () => AsyncData.waiting();\n/**\n *      @see AsyncData.right\n *\n */\nexport const right = (a) => AsyncData.right(a);\n/**\n *      @see AsyncData.left\n *\n */\nexport const left = (e) => AsyncData.left(e);\n//# sourceMappingURL=functions.js.map"],"names":["notQueried","waiting","left","right"],"mappings":"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"}